app Distcost {
  wasp: {
    version: "^0.11.4"
  },
  title: "Distcost",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    cars     Car[]
    requests Request[]
psl=}

entity Car {=psl
    id               Int       @id @default(autoincrement())
    model            String
    class            String
    transmissionType String
    owner            User      @relation(fields: [userId], references: [id])
    userId           Int
    requests         Request[]
psl=}

entity Request {=psl
    id                Int    @id @default(autoincrement())
    mechanicalFailure String
    location          String
    destination       String
    quote             Float
    status            String
    user              User   @relation(fields: [userId], references: [id])
    userId            Int
    car               Car    @relation(fields: [carId], references: [id])
    carId             Int
psl=}

action createUser {
  fn: import { createUser } from "@server/actions.js",
  entities: [User]
}

action createVehicle {
  fn: import { createVehicle } from "@server/actions.js",
  entities: [Car]
}

action createRequest {
  fn: import { createRequest } from "@server/actions.js",
  entities: [User, Request]
}

action updateRequest {
  fn: import { updateRequest } from "@server/actions.js",
  entities: [Request]
}

action completeRequest {
  fn: import { completeRequest } from "@server/actions.js",
  entities: [Request]
}

action processPayment {
  fn: import { processPayment } from "@server/paymentActions.js",
  entities: [User, Request]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User]
}

query getRequests {
  fn: import { getRequests } from "@server/queries.js",
  entities: [Request]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route RequestRoute { path: "/request/:requestId", to: RequestPage }
page RequestPage {
  component: import { Request } from "@client/pages/Request.jsx",
  authRequired: true
}

route NewRequestRoute { path: "/new-request", to: NewRequestPage }
page NewRequestPage {
  component: import { NewRequest } from "@client/pages/NewRequest.jsx",
  authRequired: true
}

route AddCarRoute { path: "/add-car", to: AddCarPage }
page AddCarPage {
  component: import { AddCar } from "@client/pages/AddCar.jsx",
  authRequired: true
}
